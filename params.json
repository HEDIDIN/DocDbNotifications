{"name":"Notifications for new or modified DocumentDB Resources","tagline":"Notifications ","body":"# Notifications for new or modified DocumentDB Resources\r\n\r\nThis article came about from a question I saw posted.  The question was “Does DocumentDB support notifications for modified resources?” \r\n\r\nI have worked with BizTalk Server for many years, and this is a very common scenario when using the [WCF LOB Adapter](https://msdn.microsoft.com/en-us/library/bb798128.aspx) .  So I decided to see if I could duplicate this functionality in DocumentDB for new and/ or modified documents. \r\n\r\n## You start off with a Use Cases.  \r\nThe following story is the Use Case for this article.\r\n\r\n> DocumentDB is the repository for HL7 FHIR documents.  Let’s assume that your DocumentDB Database combined with API and Logic App make up an HL7 FHIR Server.  A Healthcare facility is storing Patient data in the DocumentDB ‘Patients’ database. \r\nThere are several Collections within the Patient database; Clinical, Identification, etc.. Patient information falls under Identification.  You have a collection named “Patient”.\r\nThe Cardiology department is tracking personal heath and exercise data.  Searching for new or modified Patient records is time consuming.  They asked the IT department if there was a way that they could receive a notification for new or modified Patient records.  \r\nThe IT department said that they could easily provide this. They also said that they could push the documents to Google Drive so the Cardiology department could easily access them.\r\n\r\n## This is how the IT department solved the problem.\r\n\r\nIn order to create this application, I decided to model it first.  I like using Business Process Model and Notation (BPMN) because both technical and non-technical can easily understand it. I consider this a business process. \r\n\r\n## High-Level View of Notification Process\r\n[image]\r\n\r\n1. You start off with a Logic App the has a Timer Trigger. The default value is to run every hour.\r\n1. Next you do a Http Post to the Logic App which does all the work.\r\n\r\n### Let’s take a look at what this Logic App does\r\nIf you look at the following figure there are several steps in the workflow.\r\n[image]\r\n\r\nThese steps are as follows.\r\n1. You need to get the current UTC DateTime from an API App.  The default value is one hour previous.\r\n1. Then it’s converted to a Unix Timestamp format. This is the default format for timestamps in DocumentDB.\r\n1. You POST the value to an API App, which does a DocumentDB query. The value is used in a query. “SELECT * FROM Patients p WHERE (p._ts >= @value)”\r\n\r\n> NOTE: The _ts represents the TimeStamp metadata for all DocumentDB resources.\r\n1. If there are documents found, the response body is sent to you Google Drive.\r\n1. Finally, an email is sent that notifies the recipient of the number of documents found. If no documents were found, the email body would be “0 Documents Found”. \r\n\r\nNow that you have an idea of what the workflow does, let’s take a look at how you implement it.\r\n\r\n### Let’s start with the main Logic App.\r\nWhen you create a new Logic App, your are presented with “How would you like to start?” \r\nWhen you click inside the text box,  you have a choice of events. For this Logic App, you select “Manual – When a HTTP request is received” as shown below.\r\n[image]\r\n\r\n### Design View of your completed Logic App\r\nThe following figure show the design view for the Logic App, which is named DocDB.\r\n[image]\r\n\r\nWhen editing the actions in the Logic App Designer, you have the option of selecting **Outputs **from the Http Request or from the previous action as shown in the sendMail action below.\r\n[image]\r\n\r\nBefore each action in your workflow,  you can make a decision; ** Add an action **or **Add a condition **as shown in the following figure.\r\n[image]\r\n\r\nIf you select **Add a condition**, you are presented with a form, as shown in the following figure, to enter your logic.  This is in essence, a business rule.  If you click inside a field, you have a choice of selecting parameters from the previous action.  You can also enter the values directly.\r\n\r\n[image]\r\n> TIP: You also have the capability to enter everything in Code View.\r\n\r\nLet’s take a look at the completed Logic App in code view.  \r\n\r\n   \t{\r\n\t    \"$schema\": \"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2015-08-01-preview/workflowdefinition.json#\",\r\n\t    \"actions\": {\r\n\t\t\"Conversion\": {\r\n\t\t    \"conditions\": [\r\n\t\t\t{\r\n\t\t\t    \"dependsOn\": \"GetUtcDate\"\r\n\t\t\t}\r\n\t\t    ],\r\n\t\t    \"inputs\": {\r\n\t\t\t\"method\": \"post\",\r\n\t\t\t\"queries\": {\r\n\t\t\t    \"currentDateTime\": \"@{body('GetUtcDate')}\"\r\n\t\t\t},\r\n\t\t\t\"uri\": \"https://docdbnotificationapi-debug.azurewebsites.net/api/Conversion\"\r\n\t\t    },\r\n\t\t    \"metadata\": {\r\n\t\t\t\"apiDefinitionUrl\": \"https://docdbnotificationapi-debug.azurewebsites.net/swagger/docs/v1\"\r\n\t\t    },\r\n\t\t    \"type\": \"Http\"\r\n\t\t},\r\n\t\t\"Create_file\": {\r\n\t\t    \"conditions\": [\r\n\t\t\t{\r\n\t\t\t    \"dependsOn\": \"GetDocuments\"\r\n\t\t\t}\r\n\t\t    ],\r\n\t\t    \"inputs\": {\r\n\t\t\t\"body\": \"@decodeDataUri(concat('data:application/octet-stream,',encodeURIComponent(string(body('GetDocuments')))))\",\r\n\t\t\t\"host\": {\r\n\t\t\t    \"api\": {\r\n\t\t\t\t\"runtimeUrl\": \"https://logic-apis-westus.azure-apim.net/apim/googledrive\"\r\n\t\t\t    },\r\n\t\t\t    \"connection\": {\r\n\t\t\t\t\"name\": \"@parameters('$connections')['googledrive']['connectionId']\"\r\n\t\t\t    }\r\n\t\t\t},\r\n\t\t\t\"method\": \"post\",\r\n\t\t\t\"path\": \"/datasets/default/files\",\r\n\t\t\t\"queries\": {\r\n\t\t\t    \"folderPath\": \"/Patient\",\r\n\t\t\t    \"name\": \"Patient_@{guid()}.json\"\r\n\t\t\t}\r\n\t\t    },\r\n\t\t    \"type\": \"ApiConnection\"\r\n\t\t},\r\n\t\t\"GetDocuments\": {\r\n\t\t    \"conditions\": [\r\n\t\t\t{\r\n\t\t\t    \"dependsOn\": \"Conversion\"\r\n\t\t\t}\r\n\t\t    ],\r\n\t\t    \"inputs\": {\r\n\t\t\t\"method\": \"post\",\r\n\t\t\t\"queries\": {\r\n\t\t\t    \"unixTimeStamp\": \"@{body('Conversion')}\"\r\n\t\t\t},\r\n\t\t\t\"uri\": \"https://docdbnotificationapi-debug.azurewebsites.net/api/Patient\"\r\n\t\t    },\r\n\t\t    \"metadata\": {\r\n\t\t\t\"apiDefinitionUrl\": \"https://docdbnotificationapi-debug.azurewebsites.net/swagger/docs/v1\"\r\n\t\t    },\r\n\t\t    \"type\": \"Http\"\r\n\t\t},\r\n\t\t\"GetUtcDate\": {\r\n\t\t    \"conditions\": [],\r\n\t\t    \"inputs\": {\r\n\t\t\t\"method\": \"get\",\r\n\t\t\t\"queries\": {\r\n\t\t\t    \"hoursBack\": \"@{int(triggerBody()['GetUtcDate_HoursBack'])}\"\r\n\t\t\t},\r\n\t\t\t\"uri\": \"https://docdbnotificationapi-debug.azurewebsites.net/api/Authorization\"\r\n\t\t    },\r\n\t\t    \"metadata\": {\r\n\t\t\t\"apiDefinitionUrl\": \"https://docdbnotificationapi-debug.azurewebsites.net/swagger/docs/v1\"\r\n\t\t    },\r\n\t\t    \"type\": \"Http\"\r\n\t\t},\r\n\t\t\"sendMail\": {\r\n\t\t    \"conditions\": [\r\n\t\t\t{\r\n\t\t\t    \"dependsOn\": \"GetDocuments\"\r\n\t\t\t}\r\n\t\t    ],\r\n\t\t    \"inputs\": {\r\n\t\t\t\"body\": \"api_user=@{triggerBody()['sendgridUsername']}&api_key=@{triggerBody()['sendgridPassword']}&from=@{parameters('fromAddress')}&to=@{triggerBody()['EmailTo']}&subject=@{triggerBody()['Subject']}&text=@{int(length(body('GetDocuments')))} Documents Found\",\r\n\t\t\t\"headers\": {\r\n\t\t\t    \"Content-type\": \"application/x-www-form-urlencoded\"\r\n\t\t\t},\r\n\t\t\t\"method\": \"POST\",\r\n\t\t\t\"uri\": \"https://api.sendgrid.com/api/mail.send.json\"\r\n\t\t    },\r\n\t\t    \"type\": \"Http\"\r\n\t\t}\r\n\t    },\r\n\t    \"contentVersion\": \"1.0.0.0\",\r\n\t    \"outputs\": {\r\n\t\t\"Results\": {\r\n\t\t    \"type\": \"String\",\r\n\t\t    \"value\": \"@{int(length(body('GetDocuments')))} Records Found\"\r\n\t\t}\r\n\t    },\r\n\t    \"parameters\": {\r\n\t\t\"$connections\": {\r\n\t\t    \"defaultValue\": {},\r\n\t\t    \"type\": \"Object\"\r\n\t\t},\r\n\t\t\"fromAddress\": {\r\n\t\t    \"defaultValue\": \"XXX@XXX.com\",\r\n\t\t    \"type\": \"String\"\r\n\t\t},\r\n\t\t\"toAddress\": {\r\n\t\t    \"defaultValue\": \"XXXXX@XXXXX.com\",\r\n\t\t    \"type\": \"String\"\r\n\t\t}\r\n\t    },\r\n\t    \"triggers\": {\r\n\t\t\"manual\": {\r\n\t\t    \"inputs\": {\r\n\t\t\t\"schema\": {\r\n\t\t\t    \"properties\": {},\r\n\t\t\t    \"required\": [],\r\n\t\t\t    \"type\": \"object\"\r\n\t\t\t}\r\n\t\t    },\r\n\t\t    \"type\": \"Manual\"\r\n\t\t}\r\n\t    }\r\n\t}\r\n\r\nIf you are not familiar with what the different sections in the code represents, you can view the [ Logic App Workflow Definition Language](https://azure.microsoft.com/en-us/documentation/articles/app-service-logic-what-are-logic-apps/) documentation.\r\n\r\nFor this workflow you are using an [ HTTP Webhook Trigger ](https://sendgrid.com/blog/whats-webhook/). If you look at the code above, you will see parameters like the following example.\r\n   =@{triggerBody()['Subject']}\r\n\r\nThe triggerBody() represents the parameters that are included in the body of an REST POST to the Logic App REST API. The ()['Subject'] represents the field. All these parameters make up the JSON formatted body. \r\n\r\n> TIP: By using a Web hook, you can have full access to the header and body of the trigger’s request. In this application you want the body.\r\n\r\nAs mentioned previously, you can use the designer to assign parameters or do it in code view.\r\nIf you do it in code view, then you define which properties require a value as shown in the following code sample. \r\n\t\"triggers\": {\r\n\t\t\"manual\": {\r\n\t\t    \"inputs\": {\r\n\t\t\t\"schema\": {\r\n\t\t\t    \"properties\": {\r\n\t\t\t\"Subject\": {\r\n\t\t\t    \"type\" : \"String\"\t\r\n\r\n\t\t\t}\r\n\t\t\t},\r\n\t\t\t    \"required\": [\r\n\t\t\t\"Subject\"\r\n\t\t\t     ],\r\n\t\t\t    \"type\": \"object\"\r\n\t\t\t}\r\n\t\t    },\r\n\t\t    \"type\": \"Manual\"\r\n\t\t}\r\n\t    }\r\n\r\n\r\nWhat you are doing is creating a JSON schema. that will be passed in from the body of the Http POST.\r\nTo fire your trigger, you will need a CallbackURL.  You will learn how to generate it further down in the tutorial.  \r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}